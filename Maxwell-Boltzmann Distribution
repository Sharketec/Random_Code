import matplotlib.pyplot as plt
import numpy as np
import math
import pandas as pd
import seaborn as sns




Molar_Mass = 28.014
Nitrogen_mass = 4.6519 * pow(10, -23)
Boltz_Cont_k = 1.38 * pow(10, -23)
Temperatures = [300, 700, 1500]


def Front_Constant(l):
    return pow((Nitrogen_mass / (math.pi * 2 * Boltz_Cont_k * l)), (3 / 2)) * (4 * math.pi)


def Exp_Constant(n):
    return (-Nitrogen_mass) / (2 * Boltz_Cont_k * n)


def Speed_of_Molecules():
    speed_of_molecules = []
    for i in range(0, 152, 2):
        speed_of_molecules.append(i)
    return speed_of_molecules


def Function_Values(t):
    function_values_temp1 = []
    molecule = Speed_of_Molecules()
    for j in range(len(molecule)):
        a = pow(molecule[j], 2)
        for temp in range(len(Temperatures)):
            if Temperatures[temp] == t:
                values = Front_Constant(Temperatures[temp]) * a * math.exp(Exp_Constant(Temperatures[temp]) * a)
                function_values_temp1.append(values)
            elif Temperatures[temp] == t:
                values = Front_Constant(Temperatures[temp]) * a * math.exp(Exp_Constant(Temperatures[temp]) * a)
                function_values_temp1.append(values)
            elif Temperatures[temp] == t:
                values = Front_Constant(Temperatures[temp]) * a * math.exp(Exp_Constant(Temperatures[temp]) * a)
                function_values_temp1.append(values)
    return function_values_temp1


xAxis = []
for i in range(0, 152, 2): xAxis.append(i)

df1 = df = pd.DataFrame({'Speed of Molecules @ 300k': Function_Values(Temperatures[0]),
                         'Speed of Molecules @ 700k': Function_Values(Temperatures[1]),
                         'Speed of Molecules @ 1500k': Function_Values(Temperatures[2])})
df1.to_dict()
print(df1, '\n')

plt.figure(figsize=(8,8))
plt.plot(xAxis, Function_Values(Temperatures[0]), c='b', marker = '.', label='Temp = 300k')
plt.plot(xAxis, Function_Values(Temperatures[1]), c='r', marker = '.', label='Temp = 700k')
plt.plot(xAxis, Function_Values(Temperatures[2]), c='g', marker = '.', label='Temp = 1500k')
plt.axis([0,80,0,0.065])
plt.ylabel('Number of Molecules')
plt.xlabel('Temperature by the Kelvin')
plt.legend()
plt.title('Maxwell-Boltzmann Distribution for a Temperature of Kelvin')
plt.grid(linestyle='-.', alpha = .8)
plt.style.use('dark_background')
plt.show()


#These are the different grid lines that can be applied: '-', '--', '-.', ':', 'None', ' ', '', 'solid', 'dashed', 'dashdot', 'dotted'



